{"version":3,"sources":["App.js","index.js"],"names":["App","_ref","isDark","setIsDark","theme","useTheme","Object","core_browser_esm","css","_templateObject","background","text","_templateObject2","buttonBorder","buttonBg","buttonText","buttonBgHover","buttonTextHover","onClick","themeLight","themeDark","rootElement","document","getElementById","ReactDOM","render","_useState","useState","window","matchMedia","matches","_useState2","slicedToArray","emotion_theming_browser_esm","src_App"],"mappings":"09BAgDeA,MA5Cf,SAAAC,GAAoC,IAArBC,EAAqBD,EAArBC,OAAQC,EAAaF,EAAbE,UACfC,EAAQC,cAEd,OACEC,OAAAC,EAAA,EAAAD,CAAA,OACEE,IAAKA,YAAFC,IAEmBL,EAAMM,WACjBN,EAAMO,OAOjBL,OAAAC,EAAA,EAAAD,CAAA,wCAAgCJ,EAAS,OAAS,QAAlD,SACAI,OAAAC,EAAA,EAAAD,CAAA,6CACAA,OAAAC,EAAA,EAAAD,CAAA,UACEE,IAAKA,YAAFI,IAEmBR,EAAMS,aACNT,EAAMU,SACjBV,EAAMW,WAQOX,EAAMY,cACjBZ,EAAMa,iBAGnBC,QAAS,WACPf,GAAWD,KAlBf,aAqBaA,EAAS,QAAU,OArBhC,WCbAiB,SAAa,CACjBR,KAAM,OACND,WAAY,OACZK,WAAY,OACZE,gBAAiB,OACjBJ,aAAc,OACdC,SAAU,mBACVE,cAAe,qBAGXI,EAAY,CAChBT,KAAM,OACND,WAAY,UACZK,WAAY,OACZE,gBAAiB,OACjBJ,aAAc,OACdC,SAAU,yBACVE,cAAe,0BAejB,IAAMK,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAOnB,OAAAC,EAAA,EAAAD,CAbhB,WAAgB,IAAAoB,EACcC,mBAC1BC,OAAOC,WAAW,gCAAgCC,SAFtCC,EAAAzB,OAAA0B,EAAA,EAAA1B,CAAAoB,EAAA,GACPxB,EADO6B,EAAA,GACC5B,EADD4B,EAAA,GAKd,OACEzB,OAAAC,EAAA,EAAAD,CAAC2B,EAAA,EAAD,CAAe7B,MAAOF,EAASkB,EAAYD,GACzCb,OAAAC,EAAA,EAAAD,CAAC4B,EAAD,CAAKhC,OAAQA,EAAQC,UAAWA,MAMtB,MAAUkB","file":"static/js/main.f3fab22d.chunk.js","sourcesContent":["/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { useTheme } from \"emotion-theming\";\n\nfunction App({ isDark, setIsDark }) {\n  const theme = useTheme();\n\n  return (\n    <div\n      css={css`\n        padding: 50px 0;\n        background-color: ${theme.background};\n        color: ${theme.text};\n        text-align: center;\n        height: 100vh;\n        transition-duration: 0.5s;\n        transition-property: background-color, color;\n      `}\n    >\n      <h1>Hello Helly-Chan This is a {isDark ? \"Dark\" : \"Light\"} Mode</h1>\n      <h2>Wanna see some magic happening!</h2>\n      <button\n        css={css`\n          margin-top: 30px;\n          border: 2px solid ${theme.buttonBorder};\n          background-color: ${theme.buttonBg};\n          color: ${theme.buttonText};\n          padding: 14px 28px;\n          font-size: 16px;\n          transition-duration: 0.5s;\n          transition-property: background-color, color;\n          cursor: pointer;\n\n          :hover {\n            background-color: ${theme.buttonBgHover};\n            color: ${theme.buttonTextHover};\n          }\n        `}\n        onClick={() => {\n          setIsDark(!isDark);\n        }}\n      >\n        Change me {isDark ? \"light\" : \"dark\"} mode\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n","/** @jsx jsx */\nimport { useState } from \"react\";\nimport { jsx } from \"@emotion/core\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider } from \"emotion-theming\";\nimport App from \"./App\";\nimport \"./styles.css\";\n\nconst themeLight = {\n  text: \"#000\",\n  background: \"#fff\",\n  buttonText: \"#000\",\n  buttonTextHover: \"#fff\",\n  buttonBorder: \"#000\",\n  buttonBg: \"rgba(0, 0, 0, 0)\",\n  buttonBgHover: \"rgba(0, 0, 0, 1)\",\n};\n\nconst themeDark = {\n  text: \"#fff\",\n  background: \"#121212\",\n  buttonText: \"#fff\",\n  buttonTextHover: \"#000\",\n  buttonBorder: \"#fff\",\n  buttonBg: \"rgba(255, 255, 255, 0)\",\n  buttonBgHover: \"rgba(255, 255, 255, 1)\",\n};\n\nfunction Root() {\n  const [isDark, setIsDark] = useState(\n    window.matchMedia(\"(prefers-color-scheme: dark)\").matches\n  );\n\n  return (\n    <ThemeProvider theme={isDark ? themeDark : themeLight}>\n      <App isDark={isDark} setIsDark={setIsDark} />\n    </ThemeProvider>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<Root />, rootElement);\n"],"sourceRoot":""}